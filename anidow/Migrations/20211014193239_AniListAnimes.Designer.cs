// <auto-generated />
using System;
using Anidow.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anidow.Migrations
{
    [DbContext(typeof(TrackContext))]
    [Migration("20211014193239_AniListAnimes")]
    partial class AniListAnimes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Anidow.Database.Models.Anime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AniListAnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cover")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CoverDataId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genres")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdMal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Released")
                        .HasColumnType("TEXT");

                    b.Property<string>("Resolution")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Site")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Synopsis")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AniListAnimeId");

                    b.HasIndex("CoverDataId");

                    b.ToTable("Anime");
                });

            modelBuilder.Entity("Anidow.Database.Models.AppState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("FirstStart")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowStatusMiniViewAnimeBytesAiring")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowStatusMiniViewAnimeBytesAll")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowStatusMiniViewNyaa")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AppStates");
                });

            modelBuilder.Entity("Anidow.Database.Models.Cover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("File")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Covers");
                });

            modelBuilder.Entity("Anidow.Database.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cover")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CoverDataId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("File")
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hide")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HideDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Released")
                        .HasColumnType("TEXT");

                    b.Property<int>("Site")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TorrentId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("WatchedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoverDataId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Anidow.Database.Models.NotifyItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("MatchAll")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Site")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("NotifyItems");
                });

            modelBuilder.Entity("Anidow.Database.Models.NotifyItemKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCaseSensitive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRegex")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MustMatch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NotifyItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Word")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NotifyItemId");

                    b.ToTable("NotifyItemKeywords");
                });

            modelBuilder.Entity("Anidow.Database.Models.NotifyItemMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Downloaded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Json")
                        .HasColumnType("TEXT");

                    b.Property<string>("Keywords")
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NotifyItemId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Seen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Site")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UserNotified")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NotifyItemId");

                    b.ToTable("NotifyItemMatches");
                });

            modelBuilder.Entity("Anidow.GraphQL.AniListAnime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AverageScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cover")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Episodes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Format")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genres")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdMal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Season")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SeasonYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SiteUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AniListAnime");
                });

            modelBuilder.Entity("Anidow.Database.Models.Anime", b =>
                {
                    b.HasOne("Anidow.GraphQL.AniListAnime", "AniListAnime")
                        .WithMany("Animes")
                        .HasForeignKey("AniListAnimeId");

                    b.HasOne("Anidow.Database.Models.Cover", "CoverData")
                        .WithMany("Animes")
                        .HasForeignKey("CoverDataId");

                    b.Navigation("AniListAnime");

                    b.Navigation("CoverData");
                });

            modelBuilder.Entity("Anidow.Database.Models.Episode", b =>
                {
                    b.HasOne("Anidow.Database.Models.Cover", "CoverData")
                        .WithMany("Episodes")
                        .HasForeignKey("CoverDataId");

                    b.Navigation("CoverData");
                });

            modelBuilder.Entity("Anidow.Database.Models.NotifyItemKeyword", b =>
                {
                    b.HasOne("Anidow.Database.Models.NotifyItem", "NotifyItem")
                        .WithMany("Keywords")
                        .HasForeignKey("NotifyItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotifyItem");
                });

            modelBuilder.Entity("Anidow.Database.Models.NotifyItemMatch", b =>
                {
                    b.HasOne("Anidow.Database.Models.NotifyItem", "NotifyItem")
                        .WithMany("Matches")
                        .HasForeignKey("NotifyItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotifyItem");
                });

            modelBuilder.Entity("Anidow.Database.Models.Cover", b =>
                {
                    b.Navigation("Animes");

                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("Anidow.Database.Models.NotifyItem", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("Matches");
                });

            modelBuilder.Entity("Anidow.GraphQL.AniListAnime", b =>
                {
                    b.Navigation("Animes");
                });
#pragma warning restore 612, 618
        }
    }
}
