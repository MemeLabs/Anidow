<UserControl
    x:Class="Anidow.Pages.Components.Tracked.TrackedCardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:converters="clr-namespace:Anidow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:extensions1="clr-namespace:Anidow.Extensions"
    xmlns:helpers="clr-namespace:Anidow.Helpers"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Anidow.Pages.Components"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Anidow.Database.Models"
    xmlns:pages="clr-namespace:Anidow.Pages"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:tracked="clr-namespace:Anidow.Pages.Components.Tracked"
    d:DataContext="{d:DesignInstance pages:TrackedViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ItemsControl ItemsSource="{Binding Items}">
            <ItemsControl.Template>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <ScrollViewer extensions1:TouchScrolling.IsEnabled="True" VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="models:Anime">
                    <Border
                        x:Name="Card"
                        Width="140"
                        Height="190"
                        Margin="2.5,8,2.5,0"
                        Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
                        MouseDown="{s:Action EditAnime}"
                        SnapsToDevicePixels="True">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="ClipToBounds" Value="True" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}" />
                                        <Setter Property="Cursor" Value="Hand" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding TrackedViewSelected}" Value="True">
                                        <Setter Property="BorderThickness" Value="2" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image
                                Grid.RowSpan="2"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ClipToBounds="True"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                SnapsToDevicePixels="True"
                                Source="{Binding CoverData.FilePath, IsAsync=True}"
                                Stretch="UniformToFill"
                                Visibility="{Binding CoverData.File, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}" />
                            <StackPanel
                                Grid.Row="0"
                                Margin="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Visibility="{Binding CoverData.File, Converter={x:Static converters:IsNotNullToVisibilityConverter.Instance}}">
                                <TextBox x:Name="CoverUrl" extensions:WatermarkExtension.Watermark="Url ..." />
                                <Button Command="{s:Action DownloadCover, ActionNotFound=Disable}" Content="Download Cover">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{x:Static converters:DownloadCoverConverter.Instance}">
                                            <Binding ElementName="CoverUrl" Path="Text" />
                                            <Binding />
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                </Button>
                            </StackPanel>

                            <Grid
                                Grid.Row="1"
                                Background="Black"
                                Opacity=".4" />
                            <Grid
                                Grid.Row="1"
                                Height="45"
                                HorizontalAlignment="Stretch">
                                <TextBlock
                                    Margin="4"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="12"
                                    FontWeight="Bold"
                                    Text="{Binding Name}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="Wrap"
                                    ToolTip="{Binding Name}"
                                    ToolTipService.Placement="Top" />
                            </Grid>
                            <Polygon
                                Grid.Row="0"
                                Points="0,0 20,0, 0,20"
                                ToolTip="{Binding Status, Mode=OneWay}"
                                Fill="{Binding Status, Converter={x:Static converters:AnimeStatusToColorConverter.Instance}}"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Expander
            Grid.Row="1"
            VerticalAlignment="Bottom"
            extensions:GroupBoxExtension.HeaderBackground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"
            extensions:LayerExtension.IncreaseLayer="True"
            IsExpanded="True"
            Style="{StaticResource ExpanderCustom}"
            Visibility="{Binding ActiveItem, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}">
            <Expander.Header>
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Style.Setters>
                                <Setter Property="TextElement.Foreground" Value="White" />
                            </Style.Setters>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{Binding ActiveItem.Name}"
                        TextTrimming="CharacterEllipsis" />
                    <!--<TextBlock Grid.Column="2"
                               Margin="8,0"
                               VerticalAlignment="Center"
                               Opacity=".7"
                               Text="{Binding ActiveItem.Id, StringFormat=(id: {0})}"
                               Visibility="{Binding ActiveItem.Id, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}" />-->
                    <Button
                        Grid.Column="4"
                        Command="{s:Action DeselectItem}"
                        Content="{iconPacks:FontAwesome TimesSolid,
                                                        Height=15,
                                                        Width=15}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}" />
                </Grid>
            </Expander.Header>
            <tracked:TrackedAnimeEditContentView DataContext="{Binding ActiveItem}" />
        </Expander>
    </Grid>
</UserControl>
