<UserControl
    x:Class="Anidow.Pages.Components.Tracked.TrackedCardViewItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:converters="clr-namespace:Anidow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:helpers="clr-namespace:Anidow.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    x:Name="Card"
    Width="140"
    Height="190"
    Margin="0,0,5,5"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Border
        Padding="2"
        BorderThickness="2"
        CornerRadius="4"
        MouseLeftButtonDown="{s:Action CardEditAnime}">

        <Border.RenderTransform>
            <ScaleTransform />
        </Border.RenderTransform>
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.02"
                                        Duration="0:0:.1" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.02"
                                        Duration="0:0:.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.0"
                                        Duration="0:0:.1" />
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.0"
                                        Duration="0:0:.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
                        <!--<Setter Property="BorderThickness" Value="2" />-->
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid>

            <!--  Rounded mask (stretches to fill Grid)  -->
            <Border
                Name="Mask"
                Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
                CornerRadius="4" />


            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--  Use a VisualBrush of 'mask' as the opacity mask  -->
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=Mask}" />
                </Grid.OpacityMask>

                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Opacity=".6"
                    Text="Loading..." />

                <Image
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    RenderOptions.BitmapScalingMode="HighQuality"
                    Source="{Binding CoverData.FilePath, IsAsync=True}"
                    Stretch="UniformToFill"
                    Visibility="{Binding CoverData.File, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}" />

                <StackPanel
                    Grid.Row="0"
                    Margin="4,8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{Binding CoverData.File, Converter={x:Static converters:IsNotNullToVisibilityConverter.Instance}}">
                    <TextBox x:Name="CoverUrl" extensions:WatermarkExtension.Watermark="Url ..." />
                    <Button Command="{s:Action DownloadCover, ActionNotFound=Disable}" Content="Download Cover">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{x:Static converters:DownloadCoverConverter.Instance}">
                                <Binding ElementName="CoverUrl" Path="Text" />
                                <Binding />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>

                <Grid
                    Grid.Row="1"
                    Height="45"
                    HorizontalAlignment="Stretch">
                    <Grid.Background>
                        <SolidColorBrush Opacity=".4" Color="Black" />

                        <!--<LinearGradientBrush Opacity=".5" StartPoint="0,1" EndPoint="0,0">
                            <GradientStop Color="Transparent" Offset="1"/>
                            <GradientStop Color="#7F000000" Offset="0.694"/>
                            <GradientStop Color="Black" Offset="0.265"/>
                        </LinearGradientBrush>-->
                    </Grid.Background>

                    <helpers:OutlinedTextBlock
                        Margin="4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Fill="White"
                        FontSize="13"
                        FontWeight="Bold"
                        Stroke="Black"
                        Text="{Binding Name}"
                        TextTrimming="WordEllipsis"
                        TextWrapping="Wrap"
                        ToolTip="{Binding Name}"
                        ToolTipService.Placement="Top" />
                </Grid>
                <Polygon
                    Grid.Row="0"
                    Fill="{Binding Status, Converter={x:Static converters:AnimeStatusToColorConverter.Instance}}"
                    Points="0,0 20,0, 0,20"
                    ToolTip="{Binding Status, Mode=OneWay}" />
            </Grid>

        </Grid>

    </Border>


</UserControl>