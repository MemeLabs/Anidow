<controls:AdonisWindow
    x:Class="Anidow.Pages.Components.Notify.NotifyAddView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:converters="clr-namespace:Anidow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enums="clr-namespace:Anidow.Enums"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Anidow.Pages.Components.Notify"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Anidow.Database.Models"
    xmlns:pages="clr-namespace:Anidow.Pages"
    xmlns:s="https://github.com/canton7/Stylet"
    Title="Setup Wizard"
    Width="700"
    Height="350"
    d:DataContext="{d:DesignInstance local:NotifyAddViewModel}"
    Background="Transparent"
    FontSize="14"
    FontWeight="Medium"
    ResizeMode="NoResize"
    WindowStyle="None"
    mc:Ignorable="d">
    <Border
        Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
        BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"
        BorderThickness="2"
        CornerRadius="4">
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock
                Margin="0,4"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="22"
                FontWeight="SemiBold"
                Text="{Binding Title, StringFormat={}{0} Notification Rule}" />


            <Grid Grid.Row="1" Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="0,4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Width="70"
                        VerticalAlignment="Center"
                        Text="Name:" />
                    <TextBox
                        Grid.Column="1"
                        Margin="6,0,0,0"
                        Text="{Binding Item.Name, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>

                <StackPanel
                    Grid.Row="1"
                    Margin="0,4"
                    Orientation="Horizontal">
                    <TextBlock
                        Width="70"
                        VerticalAlignment="Center"
                        Text="Site:" />
                    <ComboBox
                        MinWidth="100"
                        Margin="6,0"
                        SelectedItem="{Binding Item.Site, UpdateSourceTrigger=PropertyChanged}">
                        <enums:NotifySite>All</enums:NotifySite>
                        <enums:NotifySite>AnimeBytes</enums:NotifySite>
                        <enums:NotifySite>Nyaa</enums:NotifySite>
                    </ComboBox>
                </StackPanel>

                <Grid Grid.Row="3" Margin="0,4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Width="70"
                            VerticalAlignment="Center"
                            Text="Keywords:" />
                        <TextBox
                            MinWidth="150"
                            Margin="6,0"
                            VerticalAlignment="Center"
                            extensions:WatermarkExtension.Watermark="Keyword..."
                            PreviewKeyDown="{s:Action Keyword_OnPreviewKeyDown}"
                            Text="{Binding Keyword, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <CheckBox
                        Grid.Column="1"
                        Margin="6,0"
                        Content=".*"
                        FontSize="16"
                        FontWeight="Bold"
                        Foreground="MediumSeaGreen"
                        IsChecked="{Binding UseRegex, Mode=TwoWay}"
                        ToolTip="Use Regular Expression" />

                    <CheckBox
                        Grid.Column="2"
                        Margin="0,0,6,0"
                        Content="aA"
                        FontSize="16"
                        FontWeight="Bold"
                        Foreground="MediumPurple"
                        IsChecked="{Binding CaseSensitive, Mode=TwoWay}"
                        ToolTip="Match Case" />

                    <CheckBox
                        Grid.Column="3"
                        Margin="0,0,6,0"
                        Content="!"
                        FontSize="16"
                        FontWeight="Bold"
                        Foreground="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}"
                        IsChecked="{Binding MustMatch, Mode=TwoWay}"
                        ToolTip="Must match" />

                    <Button
                        Grid.Column="4"
                        VerticalAlignment="Center"
                        Command="{s:Action AddKeyword,
                                           ActionNotFound=Disable}"
                        Content="{iconPacks:FontAwesome PlusSolid}"
                        ToolTip="Add keyword" />
                    <!--<TextBlock
                        Grid.Column="3"
                        Margin="6,0"
                        VerticalAlignment="Center"
                        Text="Match:" />
                    <ComboBox
                        Grid.Column="4"
                        MinWidth="60"
                        SelectedItem="{Binding MatchType}">
                        <pages:Match>All</pages:Match>
                        <pages:Match>Any</pages:Match>
                    </ComboBox>-->
                </Grid>

                <ItemsControl
                    Grid.Row="5"
                    Margin="0,4"
                    Padding="6"
                    ItemsSource="{Binding Item.Keywords, Mode=OneWay}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ScrollViewer
                                Padding="{TemplateBinding Padding}"
                                extensions:ScrollViewerExtension.VerticalScrollBarExpansionMode="AlwaysExpand"
                                BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}"
                                BorderThickness="2">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="models:NotifyItemKeyword">
                            <Border
                                Height="25"
                                Margin="0,0,6,6"
                                Padding="6,4"
                                Background="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}"
                                BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBorderBrush}}"
                                BorderThickness="1"
                                CornerRadius="4">
                                <StackPanel Orientation="Horizontal">
                                    <Border
                                        Width="18"
                                        Margin="0,0,4,0"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Background="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}"
                                        CornerRadius="4"
                                        ToolTip="Must Match"
                                        Visibility="{Binding MustMatch, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="10"
                                            FontWeight="Bold"
                                            Text="!" />
                                    </Border>
                                    <Border
                                        Width="18"
                                        Margin="0,0,4,0"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Background="MediumSeaGreen"
                                        CornerRadius="4"
                                        ToolTip="Use Regular Expression"
                                        Visibility="{Binding IsRegex, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="10"
                                            FontWeight="Bold"
                                            Text=".*" />
                                    </Border>
                                    <Border
                                        Width="18"
                                        Margin="0,0,4,0"
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Background="MediumPurple"
                                        CornerRadius="4"
                                        ToolTip="Match Case"
                                        Visibility="{Binding IsCaseSensitive, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="10"
                                            FontWeight="Bold"
                                            Text="aA" />
                                    </Border>
                                    <TextBox
                                        VerticalAlignment="Center"
                                        IsReadOnly="True"
                                        Style="{DynamicResource {x:Static adonisUi:Styles.SelectableTextBlockTextBox}}"
                                        Text="{Binding Word}" />
                                    <Button
                                        Margin="6,0,0,0"
                                        Command="{s:Action RemoveKeyword,
                                                           ActionNotFound=Disable}"
                                        CommandParameter="{Binding}"
                                        Content="{iconPacks:FontAwesome TimesSolid,
                                                                        Height=10}"
                                        Style="{DynamicResource {x:Static adonisUi:Styles.ToolbarButton}}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <TextBlock
                    Grid.Row="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="no keywords"
                    Visibility="{Binding Keywords.Count, Converter={x:Static converters:IsZeroToVisibilityConverter.Instance}}" />

                <CheckBox
                    Grid.Row="6"
                    Margin="0,4"
                    Content="Must match all"
                    IsChecked="{Binding Item.MatchAll, Mode=TwoWay}" />
            </Grid>

            <Grid Grid.Row="2" Margin="10,0,10,10">

                <TextBlock
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}"
                    Text="{Binding ErrorMessage}" />

                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button
                        Margin="8,0"
                        extensions:CursorSpotlightExtension.BackgroundBrush="#EF5350"
                        Command="{s:Action Close,
                                           ActionNotFound=Disable}"
                        Content="Close"
                        Style="{DynamicResource DeleteButton}" />
                    <Button
                        Command="{s:Action Add,
                                           ActionNotFound=Disable}"
                        Content="Add"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        Visibility="{Binding CanAdd, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />

                </StackPanel>
            </Grid>

        </Grid>
    </Border>
</controls:AdonisWindow>
