<UserControl
    x:Class="Anidow.Pages.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:converters="clr-namespace:Anidow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:helpers="clr-namespace:Anidow.Helpers"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
    xmlns:local="clr-namespace:Anidow.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Anidow.Database.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:shared="clr-namespace:Anidow.Pages.Components.Shared"
    d:DataContext="{d:DesignInstance local:MainViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock
            Grid.Row="0"
            Grid.RowSpan="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Opacity=".7"
            Visibility="{Binding Items.Count, Converter={x:Static converters:IsZeroToVisibilityConverter.Instance}}">
            nothing to watch
        </TextBlock>

        <ListView
            x:Name="ListView"
            Grid.Row="0"
            extensions:GridViewSortExtension.AutoSort="True"
            listViewLayout:ListViewLayoutManager.Enabled="true"
            ItemContainerStyle="{StaticResource ListViewItemHome}"
            ItemsSource="{Binding Items}"
            SelectedItem="{Binding ActiveItem}">
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        extensions:GridViewSortExtension.PropertyName="Name"
                        listViewLayout:RangeColumn.IsFillColumn="true"
                        Header="Name"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Width="27"
                                        Margin="-14,-4,0,-4"
                                        Padding="4,5,4,4"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Center"
                                        extensions:CursorSpotlightExtension.BackgroundBrush="Transparent"
                                        extensions:RippleExtension.BackgroundBrush="#EF5350"
                                        Command="{s:Action DeleteItem,
                                                           ActionNotFound=Disable}"
                                        CommandParameter="{Binding}"
                                        Content="{iconPacks:FontAwesome TimesSolid,
                                                                        Width=10,
                                                                        Height=10}"
                                        Style="{StaticResource DeleteButton}" />

                                    <TextBlock
                                        x:Name="Name"
                                        Grid.Column="1"
                                        Margin="8,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        Text="{Binding Name}"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="NoWrap"
                                        ToolTip="{Binding Name}"
                                        ToolTipService.Placement="Bottom" />
                                </Grid>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Watched}" Value="True">
                                        <Setter TargetName="Name" Property="Opacity" Value="0.3" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="85"
                        extensions:GridViewSortExtension.PropertyName="EpisodeNum"
                        listViewLayout:FixedColumn.Width="85"
                        Header="Episode"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <TextBlock
                                    Width="78"
                                    Margin="-12,0"
                                    HorizontalAlignment="Left"
                                    Text="{Binding EpisodeNum}"
                                    TextAlignment="Center" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="120"
                        extensions:GridViewSortExtension.PropertyName="Released"
                        listViewLayout:FixedColumn.Width="120"
                        Header="Added"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <TextBlock Text="{Binding ReleasedString}" ToolTipService.Placement="Bottom">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding ReleasedLocal}" ContentStringFormat="{}{0:g}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="70"
                        listViewLayout:FixedColumn.Width="70"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <Button
                                    Width="66"
                                    Command="{s:Action Watch,
                                                       ActionNotFound=Disable}"
                                    CommandParameter="{Binding}"
                                    Content="Watch"
                                    Style="{StaticResource ColumnButton}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Grid
            Grid.Row="0"
            Margin="2,-29"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="{Binding AnimesToday.Count, Converter={x:Static converters:IsNotZeroToVisibilityConverter.Instance}}">
            <ToggleButton
                x:Name="PredictedToggleButton"
                extensions:CornerRadiusExtension.CornerRadius="4"
                extensions:CursorSpotlightExtension.BackgroundBrush="{DynamicResource {x:Static adonisUi:Brushes.AccentIntenseHighlightBrush}}"
                Background="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}"
                BorderThickness="0"
                Command="{s:Action GetAiringEpisodesForToday,
                                   ActionNotFound=Disable}"
                Content="{Binding AnimesToday.Count}" />
            <Popup
                Width="{Binding ElementName=ListView, Path=ActualWidth}"
                AllowsTransparency="True"
                HorizontalOffset="-2"
                IsOpen="{Binding ElementName=PredictedToggleButton, Path=IsChecked}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=PredictedToggleButton}"
                StaysOpen="False"
                VerticalOffset="4">
                <Border
                    Padding="8"
                    Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
                    BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}"
                    BorderThickness="2"
                    CornerRadius="4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock>Predicted new releases today:</TextBlock>
                        <Separator Grid.Row="1" />
                        <ItemsControl
                            Grid.Row="2"
                            Grid.Column="0"
                            ItemsSource="{Binding AnimesToday}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="150" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock VerticalAlignment="Top" Text="{Binding Date}" />
                                            <Separator
                                                Grid.Column="1"
                                                Margin="8,0"
                                                VerticalAlignment="Stretch"
                                                Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                            <TextBlock
                                                Grid.Column="2"
                                                VerticalAlignment="Top"
                                                Text="{Binding Name}"
                                                TextWrapping="Wrap" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Border>
            </Popup>
        </Grid>
        <Expander
            Grid.Row="1"
            VerticalAlignment="Bottom"
            extensions:GroupBoxExtension.HeaderBackground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"
            extensions:LayerExtension.IncreaseLayer="True"
            Style="{StaticResource ExpanderCustom}"
            Visibility="{Binding ActiveItem, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}">
            <Expander.Header>
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Style.Setters>
                                <Setter Property="TextElement.Foreground" Value="White" />
                            </Style.Setters>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        Margin="0,-4,8,-4"
                        Command="{s:Action Download}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="{iconPacks:FontAwesome DownloadSolid,
                                                        Height=15,
                                                        Width=15}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        ToolTip="Re-add torrent to the torrent client" />

                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="Information" />

                    <!--<TextBlock Grid.Column="2"
                               Margin="8,0"
                               VerticalAlignment="Center"
                               Opacity=".7"
                               Text="{Binding ActiveItem.Id, StringFormat=(id: {0})}"
                               Visibility="{Binding ActiveItem.Id, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}" />-->
                    <Button
                        Grid.Column="3"
                        Margin="0,-4"
                        Command="{s:Action DeselectItem}"
                        Content="{iconPacks:FontAwesome TimesSolid,
                                                        Height=15,
                                                        Width=15}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
                </Grid>
            </Expander.Header>

            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox IsReadOnly="True" Text="{Binding ActiveItem.Link, Mode=OneWay}" />
                    <Button
                        Grid.Column="1"
                        Margin="8,0,0,0"
                        Command="{s:Action OpenExternalLink}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="{iconPacks:FontAwesome ExternalLinkAltSolid}" />
                </Grid>

                <Grid Grid.Row="1" Margin="0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox IsReadOnly="True" Text="{Binding ActiveItem.Folder}" />
                    <Button
                        Grid.Column="1"
                        Margin="8,0,0,0"
                        Command="{s:Action OpenFolder}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="{iconPacks:FontAwesome FolderOpenSolid}" />
                </Grid>
                <Grid Grid.Row="2" Margin="0">
                    <shared:EpisodeInformationActions DataContext="{Binding}" />
                </Grid>
            </Grid>
        </Expander>
        <StatusBar Grid.Row="2">
            <StatusBarItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <StackPanel Orientation="Horizontal">
                    <Button
                        Margin="-4,-3,0,-3"
                        extensions:CursorSpotlightExtension.BackgroundBrush="Transparent"
                        s:View.ActionTarget="{Binding AnimeBytesService}"
                        Command="{s:Action StartTracker,
                                           ActionNotFound=Disable}"
                        Content="{iconPacks:FontAwesome PlaySolid,
                                                        Height=10}"
                        Style="{StaticResource ActionButton}"
                        ToolTip="Start"
                        ToolTipService.Placement="Top"
                        Visibility="{Binding AnimeBytesService.TrackerIsRunning, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />
                    <Button
                        Margin="-4,-3,0,-3"
                        extensions:CursorSpotlightExtension.BackgroundBrush="Transparent"
                        s:View.ActionTarget="{Binding AnimeBytesService}"
                        Command="{s:Action StopTracker,
                                           ActionNotFound=Disable}"
                        Content="{iconPacks:FontAwesome PauseSolid,
                                                        Height=10}"
                        Style="{StaticResource ActionButton}"
                        ToolTip="Pause"
                        ToolTipService.Placement="Top"
                        Visibility="{Binding AnimeBytesService.TrackerIsRunning, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding NextCheckIn}" />
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <Button
                    Margin="0,-3"
                    Command="{s:Action ForceCheck}"
                    Content="Check now" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>