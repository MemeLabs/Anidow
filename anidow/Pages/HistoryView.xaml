<UserControl
    x:Class="Anidow.Pages.HistoryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:controls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:converters="clr-namespace:Anidow.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:helpers="clr-namespace:Anidow.Helpers"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
    xmlns:local="clr-namespace:Anidow.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Anidow.Database.Models"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    d:DataContext="{d:DesignInstance local:HistoryViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <helpers:BindingProxy x:Key="Proxy" Data="{Binding}" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <GroupBox Margin="2" extensions:LayerExtension.IncreaseLayer="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    Margin="0,0,4,0"
                    Command="{s:Action LoadEpisodes,
                                       ActionNotFound=Disable}">
                    <Button.CommandParameter>
                        <system:Boolean>True</system:Boolean>
                    </Button.CommandParameter>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:FontAwesome Kind="SyncAltSolid" />
                            <TextBlock
                                Margin="4,0"
                                VerticalAlignment="Center"
                                Text="Refresh" />
                        </StackPanel>
                    </Button.Content>
                </Button>

                <TextBlock
                    Grid.Column="1"
                    Margin="4,0"
                    VerticalAlignment="Center"
                    Text="Filter:" />

                <ComboBox
                    Grid.Column="2"
                    Margin="4,0"
                    ItemsSource="{Binding HistoryFilters, Mode=OneTime}"
                    SelectedItem="{Binding FilterStatus}" />

                <TextBlock
                    Grid.Column="3"
                    Margin="4,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Opacity=".7"
                    Text="{Binding EpisodesLoaded}" />

                <Button
                    Grid.Column="4"
                    Margin="4,0"
                    Command="{s:Action LoadMore,
                                       ActionNotFound=Disable}"
                    Visibility="{Binding CanLoadMore, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                    Load more
                </Button>

                <TextBox
                    Grid.Column="6"
                    MinWidth="200"
                    Margin="4,0,0,0"
                    extensions:WatermarkExtension.Watermark="Search..."
                    Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </GroupBox>
        <TextBlock
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Opacity=".7"
            Visibility="{Binding Items.Count, Converter={x:Static converters:IsZeroToVisibilityConverter.Instance}}">
            no history
        </TextBlock>

        <ListView
            Grid.Row="1"
            extensions:GridViewSortExtension.AutoSort="True"
            listViewLayout:ListViewLayoutManager.Enabled="true"
            ItemContainerStyle="{StaticResource ListViewItemHome}"
            ItemsSource="{Binding Items}"
            Loaded="{s:Action ListLoaded}"
            ScrollViewer.CanContentScroll="True"
            SelectedItem="{Binding ActiveItem}"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        extensions:GridViewSortExtension.PropertyName="Name"
                        listViewLayout:RangeColumn.IsFillColumn="true"
                        Header="Name"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Width="27"
                                        Margin="-14,-4,0,-4"
                                        Padding="4,5,4,4"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        ToolTip="Back to Home tab"
                                        HorizontalContentAlignment="Center"
                                        extensions:CursorSpotlightExtension.BackgroundBrush="Transparent"
                                        extensions:RippleExtension.BackgroundBrush="#EF5350"
                                        Command="{s:Action UnHideItem,
                                                           ActionNotFound=Disable}"
                                        CommandParameter="{Binding}"
                                        Content="{iconPacks:FontAwesome TimesSolid,
                                                                        Width=10,
                                                                        Height=10}"
                                        Style="{StaticResource DeleteButton}" />

                                    <TextBlock
                                        x:Name="Name"
                                        Grid.Column="1"
                                        Margin="8,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Center"
                                        Text="{Binding Name}"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="NoWrap"
                                        ToolTip="{Binding Name}"
                                        ToolTipService.Placement="Bottom" />
                                </Grid>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Watched}" Value="True">
                                        <Setter TargetName="Name" Property="Opacity" Value="0.3" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="85"
                        extensions:GridViewSortExtension.PropertyName="EpisodeNum"
                        listViewLayout:FixedColumn.Width="85"
                        Header="Episode"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <TextBlock
                                    Width="78"
                                    Margin="-12,0"
                                    HorizontalAlignment="Left"
                                    Text="{Binding EpisodeNum}"
                                    TextAlignment="Center" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="120"
                        extensions:GridViewSortExtension.PropertyName="WatchedDate"
                        listViewLayout:FixedColumn.Width="120"
                        Header="Watched"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <TextBlock Text="{Binding WatchedString}" ToolTipService.Placement="Bottom">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding WatchedDateLocal}" ContentStringFormat="{}{0:g}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="120"
                        extensions:GridViewSortExtension.PropertyName="Released"
                        listViewLayout:FixedColumn.Width="120"
                        Header="Added"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate DataType="models:Episode">
                                <TextBlock Text="{Binding ReleasedString}" ToolTipService.Placement="Bottom">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding ReleasedLocal}" ContentStringFormat="{}{0:g}" />
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="70"
                        listViewLayout:FixedColumn.Width="70"
                        CellTemplate="{DynamicResource WatchOpen}"
                        HeaderContainerStyle="{StaticResource GridViewCenteredContainerStyle}" />
                </GridView>
            </ListView.View>
        </ListView>

        <Expander
            Grid.Row="2"
            VerticalAlignment="Bottom"
            extensions:GroupBoxExtension.HeaderBackground="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"
            extensions:LayerExtension.IncreaseLayer="True"
            Style="{StaticResource ExpanderCustom}"
            Visibility="{Binding ActiveItem, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}">
            <Expander.Header>
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="Grid">
                            <Style.Setters>
                                <Setter Property="TextElement.Foreground" Value="White" />
                            </Style.Setters>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        Margin="0,-4,8,-4"
                        Command="{s:Action Download}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="{iconPacks:FontAwesome DownloadSolid,
                                                        Height=15,
                                                        Width=15}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}"
                        ToolTip="Re-add torrent to the torrent client" />

                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="Information" />
                    <!--<TextBlock Grid.Column="2"
                               Margin="8,0"
                               VerticalAlignment="Center"
                               Opacity=".7"
                               Text="{Binding ActiveItem.Id, StringFormat=(id: {0})}"
                               Visibility="{Binding ActiveItem.Id, Converter={x:Static converters:IsNullToVisibilityConverter.Instance}}" />-->
                    <Button
                        Grid.Column="4"
                        Margin="0,-4"
                        Command="{s:Action DeselectItem,
                                           ActionNotFound=Disable}"
                        Content="{iconPacks:FontAwesome TimesSolid,
                                                        Height=15,
                                                        Width=15}"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
                </Grid>
            </Expander.Header>

            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox IsReadOnly="True" Text="{Binding ActiveItem.Link, Mode=OneWay}" />
                    <Button
                        Grid.Column="1"
                        Margin="8,0,0,0"
                        Command="{s:Action OpenExternalLink}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="{iconPacks:FontAwesome ExternalLinkAltSolid}" />
                </Grid>

                <Grid Grid.Row="1" Margin="0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox IsReadOnly="True" Text="{Binding ActiveItem.Folder}" />
                    <Button
                        Grid.Column="1"
                        Margin="8,0,0,0"
                        Command="{s:Action OpenFolder}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="{iconPacks:FontAwesome FolderOpenSolid}" />
                </Grid>
                <Grid Grid.Row="2" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="8" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="8" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <controls:SplitButton
                        HorizontalContentAlignment="Center"
                        extensions:CursorSpotlightExtension.BackgroundBrush="#EF5350"
                        extensions:RippleExtension.BackgroundBrush="#EF5350"
                        s:View.ActionTarget="{Binding Data, Source={StaticResource Proxy}}"
                        Background="#F44336"
                        Command="{s:Action DeleteItem,
                                           ActionNotFound=Disable}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="Delete"
                        Foreground="White">
                        <controls:SplitButton.SplitMenu>
                            <ContextMenu
                                MinWidth="{Binding PlacementTarget.ActualWidth, RelativeSource={RelativeSource Self}}">
                                <MenuItem
                                    extensions:CursorSpotlightExtension.BackgroundBrush="#EF5350"
                                    extensions:RippleExtension.BackgroundBrush="#EF5350"
                                    s:View.ActionTarget="{Binding Data, Source={StaticResource Proxy}}"
                                    Background="#F44336"
                                    Command="{s:Action DeleteWithFile,
                                                       NullTarget=Disable}"
                                    CommandParameter="{Binding ActiveItem}"
                                    Foreground="White"
                                    Header="with file"
                                    Icon="{iconPacks:FontAwesome FileVideoSolid}" />
                            </ContextMenu>
                        </controls:SplitButton.SplitMenu>
                    </controls:SplitButton>

                    <!--<Button Grid.Column="0"
                            extensions:CursorSpotlightExtension.BackgroundBrush="#EF5350"
                            Background="#F44336"
                            Command="{s:Action DeleteItem}"
                            CommandParameter="{Binding ActiveItem}"
                            Content="Delete" />-->
                    <Button
                        Grid.Column="2"
                        Command="{s:Action ToggleWatch}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="Toggle Watched"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
                    <Button
                        Grid.Column="4"
                        Command="{s:Action Watch}"
                        CommandParameter="{Binding ActiveItem}"
                        Content="Watch"
                        Style="{DynamicResource {x:Static adonisUi:Styles.AccentButton}}" />
                </Grid>
            </Grid>
        </Expander>
    </Grid>
</UserControl>