<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:converters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>

                                <Ellipse
                                    x:Name="Circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="{TemplateBinding BorderBrush}" />

                                <ContentControl
                                    x:Name="Arrow"
                                    Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.Expander}}"
                                    Focusable="False"
                                    Foreground="{TemplateBinding BorderBrush}"
                                    RenderTransformOrigin="0.5 0.5">
                                    <ContentControl.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                            </Grid>

                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="-180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>

                                <Ellipse
                                    x:Name="Circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="{TemplateBinding BorderBrush}" />

                                <ContentControl
                                    x:Name="Arrow"
                                    Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.Expander}}"
                                    Focusable="False"
                                    Foreground="{TemplateBinding BorderBrush}"
                                    RenderTransformOrigin="0.5 0.5">
                                    <ContentControl.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                            </Grid>

                            <ContentPresenter
                                Grid.Column="1"
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="-180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>

                                <Ellipse
                                    x:Name="Circle"
                                    Width="19"
                                    Height="19"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stroke="{TemplateBinding BorderBrush}" />

                                <ContentControl
                                    x:Name="Arrow"
                                    Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.Expander}}"
                                    Focusable="False"
                                    Foreground="{TemplateBinding BorderBrush}"
                                    RenderTransformOrigin="0.5 0.5">
                                    <ContentControl.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                            </Grid>

                            <ContentPresenter
                                Grid.Row="1"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Top"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="-180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            SnapsToDevicePixels="True"
                            Stroke="Black"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="8" Background="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ContentControl
                                x:Name="Arrow"
                                Grid.Column="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{iconPacks:FontAwesome SortUpSolid,
                                                                Width=10,
                                                                Height=10}"
                                Focusable="False"
                                Foreground="White"
                                RenderTransformOrigin="0.5 0.5">
                                <ContentControl.RenderTransform>
                                    <RotateTransform Angle="0" />
                                </ContentControl.RenderTransform>
                            </ContentControl>

                            <ContentPresenter
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        </Grid>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="-180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderDarkStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="8" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ContentControl
                                x:Name="Arrow"
                                Grid.Column="2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Content="{iconPacks:FontAwesome SortUpSolid,
                                                                Width=10,
                                                                Height=10}"
                                Focusable="False"
                                Foreground="White"
                                RenderTransformOrigin="0.5 0.5">
                                <ContentControl.RenderTransform>
                                    <RotateTransform Angle="0" />
                                </ContentControl.RenderTransform>
                            </ContentControl>

                            <ContentPresenter
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        </Grid>


                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            To="-180"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderCustom" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel Background="{TemplateBinding Background}">
                        <ToggleButton
                            Name="HeaderSite"
                            BorderThickness="0"
                            Content="{TemplateBinding Header}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            Cursor="Hand"
                            DockPanel.Dock="Top"
                            Focusable="False"
                            Foreground="White"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            IsTabStop="False"
                            Style="{StaticResource ExpanderDownHeaderStyle}"
                            TextElement.FontSize="15" />

                        <Border
                            x:Name="ExpandSiteContainerWrapper"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
                            DockPanel.Dock="Bottom">
                            <ScrollViewer
                                x:Name="ExpandSiteContainer"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.Height>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSite" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </ScrollViewer.Height>
                                <ScrollViewer.Tag>
                                    <system:Double>0.0</system:Double>
                                </ScrollViewer.Tag>

                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False" />
                            </ScrollViewer>

                        </Border>
                    </DockPanel>


                    <ControlTemplate.Triggers>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSiteContainerWrapper" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSiteContainerWrapper" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="ExpandSiteContainer" Property="Height" Value="Auto" />
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSite" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSiteContainerWrapper" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="ExpandSiteContainer" Property="Height" Value="Auto" />
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSite" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Down" />
                                <Condition Property="VerticalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Height">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Up" />
                                <Condition Property="VerticalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Height">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Right" />
                                <Condition Property="HorizontalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Left" />
                                <Condition Property="HorizontalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSiteContainer"
                                            Storyboard.TargetProperty="Tag"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSiteContainer"
                                            Storyboard.TargetProperty="Tag"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ExpandSite" Property="KeyboardNavigation.TabNavigation" Value="None" />
                        </Trigger>

                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BackgroundBrush}}" />
            </DataTrigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="ExpanderCustomDark" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel Background="Transparent">
                        <ToggleButton
                            Name="HeaderSite"
                            BorderThickness="0"
                            Content="{TemplateBinding Header}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            Cursor="Hand"
                            DockPanel.Dock="Top"
                            Focusable="False"
                            Foreground="White"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            IsTabStop="False"
                            Style="{StaticResource ExpanderDownHeaderDarkStyle}"
                            TextElement.FontSize="15" />

                        <Border
                            x:Name="ExpandSiteContainerWrapper"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}"
                            ClipToBounds="True"
                            CornerRadius="0,0,4,4"
                            DockPanel.Dock="Bottom">
                            <ScrollViewer
                                x:Name="ExpandSiteContainer"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Hidden">
                                <ScrollViewer.Height>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSite" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </ScrollViewer.Height>
                                <ScrollViewer.Tag>
                                    <system:Double>0.0</system:Double>
                                </ScrollViewer.Tag>

                                <ContentPresenter
                                    x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False" />
                            </ScrollViewer>

                        </Border>
                    </DockPanel>


                    <ControlTemplate.Triggers>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSiteContainerWrapper" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSiteContainerWrapper" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="ExpandSiteContainer" Property="Height" Value="Auto" />
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSite" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSiteContainerWrapper" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="ExpandSiteContainer" Property="Height" Value="Auto" />
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSite" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Down" />
                                <Condition Property="VerticalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Height">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Up" />
                                <Condition Property="VerticalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Height">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualHeight" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Right" />
                                <Condition Property="HorizontalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ExpandDirection" Value="Left" />
                                <Condition Property="HorizontalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpandSiteContainer" Property="Width">
                                <Setter.Value>
                                    <MultiBinding Converter="{converters:MathConverter}" ConverterParameter="x*y">
                                        <Binding ElementName="ExpandSiteContainerWrapper" Path="ActualWidth" />
                                        <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSiteContainer"
                                            Storyboard.TargetProperty="Tag"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandSiteContainer"
                                            Storyboard.TargetProperty="Tag"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ExpandSite" Property="KeyboardNavigation.TabNavigation" Value="None" />
                        </Trigger>

                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BackgroundBrush}}" />
            </DataTrigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
            </Trigger>

        </Style.Triggers>
    </Style>
</ResourceDictionary>