<Application
    x:Class="Anidow.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:anidow="clr-namespace:Anidow"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:extensions1="clr-namespace:Anidow.Extensions"
    xmlns:s="https://github.com/canton7/Stylet">
    <Application.Resources>
        <s:ApplicationLoader LoadStyletResources="False">
            <s:ApplicationLoader.Bootstrapper>
                <anidow:Bootstrapper />
            </s:ApplicationLoader.Bootstrapper>

            <s:ApplicationLoader.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Styles/Expander.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Styles/TabControl.xaml" />
            </s:ApplicationLoader.MergedDictionaries>

            <Style BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type Window}" />

            <Style BasedOn="{StaticResource {x:Type ScrollViewer}}" TargetType="{x:Type ScrollViewer}">
                <Setter Property="extensions:ScrollBarExtension.ExpansionMode" Value="ExpandOnHover" />
                <Setter Property="extensions:ScrollViewerExtension.VerticalScrollBarPlacement" Value="Overlay" />
                <Setter Property="extensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver" Value="True" />
            </Style>

            <Style x:Key="BreadcrumbSeparatorStyle" TargetType="ContentControl">
                <Setter Property="Margin" Value="{adonisUi:Space 1, 0, 0, 0}" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Viewbox Margin="0,0,8,0" Stretch="UniformToFill">
                                <Border
                                    Width="6"
                                    Height="8"
                                    Opacity="0.2">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 0">
                                            <GradientStop Offset="0" Color="{DynamicResource {x:Static adonisUi:Colors.AccentColor}}" />
                                            <GradientStop Offset="0.5" Color="{DynamicResource {x:Static adonisUi:Colors.AccentColor}}" />
                                            <GradientStop Offset="0.5" Color="#d0000000" />
                                            <GradientStop Offset="0.55" Color="#80000000" />
                                            <GradientStop Offset="0.65" Color="{DynamicResource {x:Static adonisUi:Colors.AccentColor}}" />
                                            <GradientStop Offset="1" Color="{DynamicResource {x:Static adonisUi:Colors.AccentColor}}" />
                                            <LinearGradientBrush.Transform>
                                                <RotateTransform Angle="20" />
                                            </LinearGradientBrush.Transform>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Viewbox>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="{x:Type ToolTip}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border
                                Name="Border"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Padding="4"
                                Background="{DynamicResource {x:Static adonisUi:Brushes.Layer4BackgroundBrush}}"
                                BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.AccentInteractionBorderBrush}}"
                                BorderThickness="2">
                                <ContentPresenter
                                    Margin="4"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                                    <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="GridViewCenteredContainerStyle"
                BasedOn="{StaticResource {x:Type GridViewColumnHeader}}"
                TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="2" />
            </Style>

            <Style
                x:Key="GridViewLeftContainerStyle"
                BasedOn="{StaticResource {x:Type GridViewColumnHeader}}"
                TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Margin" Value="4,0,0,0" />
            </Style>

            <DataTemplate x:Key="GridViewTextblockHeaderTemplate">
                <TextBlock Margin="2,0,2,0" Text="{Binding}" />
            </DataTemplate>

            <Style x:Key="ItemsControlVirtualizedStyle" TargetType="ItemsControl">
                <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
                <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel
                                IsItemsHost="True"
                                IsVirtualizing="True"
                                VirtualizationMode="Recycling" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <Border
                                Padding="{TemplateBinding Control.Padding}"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer
                                    Padding="{TemplateBinding Control.Padding}"
                                    extensions1:TouchScrolling.IsEnabled="True"
                                    extensions:ScrollViewerExtension.VerticalScrollBarPlacement="Overlay"
                                    CanContentScroll="True"
                                    Focusable="False"
                                    VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="DeleteButton"
                BasedOn="{StaticResource {x:Type Button}}"
                TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="8" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="ActionButton"
                BasedOn="{StaticResource {x:Type Button}}"
                TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="8" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="ColumnButton"
                BasedOn="{StaticResource {x:Type Button}}"
                TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="-12,-4" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
        </s:ApplicationLoader>
    </Application.Resources>
</Application>